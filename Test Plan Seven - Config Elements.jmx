<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="BLAZEMETER_DARAZ">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.${project.version}. Please contact support@blazemeter.com for further support.</stringProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;130&quot;, &quot;Microsoft Edge&quot;;v=&quot;130&quot;, &quot;Not?A_Brand&quot;;v=&quot;99&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">www.daraz.lk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">member.daraz.lk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">cart.daraz.lk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">my.daraz.lk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">acs-m.daraz.lk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">umlazada.alibaba.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_7" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_7</stringProp>
            <stringProp name="Argument.value">helpcenter.daraz.lk</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults">
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.daraz.lk/?spm=a2a0e.tm80335410.header.dhome">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="spm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spm</stringProp>
                  <stringProp name="Argument.value">a2a0e.tm80335410.header.dhome</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getCsrfToken">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getCsrfToken">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getUser">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.lk/cart/api/count">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.lk/api/recentOrders/">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/?jsv=2.7.4&amp;appKey=24937400&amp;t=1730771414793&amp;sign=6a09fa01bf5d7a95969c0512c9b32084&amp;api=mtop.relationrecommend.LazadaRecommend.recommend&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=LK&amp;data=%7B%22appId%22%3A%2241701%22%2C%22params%22%3A%22%7B%5C%22appId%5C%22%3A%5C%2241701%5C%22%2C%5C%22isbackup%5C%22%3Atrue%2C%5C%22newTileEnable%5C%22%3Atrue%2C%5C%22language%5C%22%3A%5C%22en%5C%22%2C%5C%22region_id%5C%22%3A%5C%22LK%5C%22%2C%5C%22platform%5C%22%3A%5C%22pc%5C%22%2C%5C%22scene%5C%22%3A%5C%22homepage%5C%22%2C%5C%22appVersion%5C%22%3A%5C%227.48.0%5C%22%2C%5C%22anonymous_id%5C%22%3A%5C%225hCkHwXDQCoCAbahGLSN%2Bmwl%5C%22%2C%5C%22pageSize%5C%22%3A50%2C%5C%22userId%5C%22%3A0%2C%5C%22pageNo%5C%22%3A0%7D%22%7D">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;appId&quot;:&quot;41701&quot;,&quot;params&quot;:&quot;{\&quot;appId\&quot;:\&quot;41701\&quot;,\&quot;isbackup\&quot;:true,\&quot;newTileEnable\&quot;:true,\&quot;language\&quot;:\&quot;en\&quot;,\&quot;region_id\&quot;:\&quot;LK\&quot;,\&quot;platform\&quot;:\&quot;pc\&quot;,\&quot;scene\&quot;:\&quot;homepage\&quot;,\&quot;appVersion\&quot;:\&quot;7.48.0\&quot;,\&quot;anonymous_id\&quot;:\&quot;5hCkHwXDQCoCAbahGLSN+mwl\&quot;,\&quot;pageSize\&quot;:50,\&quot;userId\&quot;:0,\&quot;pageNo\&quot;:0}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">6a09fa01bf5d7a95969c0512c9b32084</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771414793</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.relationrecommend.LazadaRecommend.recommend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.daraz.lk/products/professional-nova-foldable-hair-dryer-compact-and-powerful-for-salon-quality-styling-i113580647-s1024812350.html?scm=1007.51657.380827.0&amp;pvid=37d200a6-91e8-4998-b415-871c10f4582e&amp;search=flashsale&amp;spm=a2a0e.tm80335410.FlashSale.d_113580647">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">products/professional-nova-foldable-hair-dryer-compact-and-powerful-for-salon-quality-styling-i113580647-s1024812350.html</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="spm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spm</stringProp>
                  <stringProp name="Argument.value">a2a0e.tm80335410.FlashSale.d_113580647</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="search" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search</stringProp>
                  <stringProp name="Argument.value">flashsale</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pvid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pvid</stringProp>
                  <stringProp name="Argument.value">37d200a6-91e8-4998-b415-871c10f4582e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scm</stringProp>
                  <stringProp name="Argument.value">1007.51657.380827.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">10517.0</stringProp>
              <stringProp name="ConstantTimer.delay">5258.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 10517 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getContextInfo">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getContextInfo</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.global.detail.web.getdetailinfo/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1730771423789&amp;sign=2f47373d683dc06e8515f33ef9187ab9&amp;api=mtop.global.detail.web.getDetailInfo&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=LK&amp;traffic=drz-replatform&amp;appkey=24677475">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.global.detail.web.getdetailinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">2f47373d683dc06e8515f33ef9187ab9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771423789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.global.detail.web.getDetailInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">traffic</stringProp>
                  <stringProp name="Argument.value">drz-replatform</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;deviceType&quot;:&quot;pc&quot;,&quot;path&quot;:&quot;https://www.daraz.lk/products/professional-nova-foldable-hair-dryer-compact-and-powerful-for-salon-quality-styling-i113580647-s1024812350.html?scm=1007.51657.380827.0&amp;pvid=37d200a6-91e8-4998-b415-871c10f4582e&amp;search=flashsale&amp;spm=a2a0e.tm80335410.FlashSale.d_113580647&quot;,&quot;uri&quot;:&quot;professional-nova-foldable-hair-dryer-compact-and-powerful-for-salon-quality-styling-i113580647-s1024812350&quot;,&quot;headerParams&quot;:&quot;{\&quot;user-agent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0\&quot;}&quot;,&quot;cookieParams&quot;:&quot;{\&quot;__wpkreporterwid_\&quot;:\&quot;08814914-2298-45d3-ac2b-39688949aae2\&quot;,\&quot;t_fv\&quot;:\&quot;1729962725688\&quot;,\&quot;t_uid\&quot;:\&quot;Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG\&quot;,\&quot;hng\&quot;:\&quot;LK|en-LK|LKR|144\&quot;,\&quot;userLanguageML\&quot;:\&quot;en\&quot;,\&quot;lwrid\&quot;:\&quot;AgGSydBR9w%2BCMFdNYX7EX38RnGh3\&quot;,\&quot;cna\&quot;:\&quot;5hCkHwXDQCoCAbahGLSN+mwl\&quot;,\&quot;lzd_cid\&quot;:\&quot;3b42b1d7-8bfe-4b3a-a44a-79cc93edc137\&quot;,\&quot;G_ENABLED_IDPS\&quot;:\&quot;google\&quot;,\&quot;__itrace_wid\&quot;:\&quot;c87a52e1-8ce4-4b8e-bf23-25dba3ae3b5a\&quot;,\&quot;_gcl_au\&quot;:\&quot;1.1.1582632263.1729962751\&quot;,\&quot;_ga\&quot;:\&quot;GA1.1.516471463.1729962752\&quot;,\&quot;_bl_uid\&quot;:\&quot;0LmXb28OyIhj3s6yazn8x3vr87zU\&quot;,\&quot;xlly_s\&quot;:\&quot;1\&quot;,\&quot;_ga_1SEV5HT1F5\&quot;:\&quot;GS1.1.1730716415.12.1.1730716541.17.0.0\&quot;,\&quot;t_sid\&quot;:\&quot;yrEEk0cllSLMmHWKHpN89LH2sTSTcZg6\&quot;,\&quot;utm_channel\&quot;:\&quot;NA\&quot;,\&quot;_m_h5_tk\&quot;:\&quot;e23822999a8a351c90aba7a3aa93bf8e_1730779980304\&quot;,\&quot;_m_h5_tk_enc\&quot;:\&quot;2e84eacae183102a95ac722b707aa22e\&quot;,\&quot;lwrtk\&quot;:\&quot;AAEEZynqCj9/1L7TIDdjIcTYrbij1jg4jUVlC/FmBg+BTvkCE94BVf8\&quot;,\&quot;epssw\&quot;:\&quot;7*XOpss6pJ5s8h-G8vT21sussKSTOOn_XsE33glPWbmsm3zkTLAzQoI8bZ5LbZ1a3svKFt7NYCvw8Wvx06T21j7BDjsss7sha68FtkB3oLduivqo_Ysx3cte5jssp66htvPpxTGmUdM01XUl4oJGJ5FQFxiRKKjqwYrzsVz-mDkpvcswvOGqyBDnxtXsEK_GaKsR2TnPHJBEgIOXQp_DLbOFItOYCxBXb2sIhnktCJBcfkuE4XB-9AlExOKBbf3s6Z3R3eCSpyfCIq7ZcBbeohssuJgsYhssIGj6du3xpFNvfsysX5tsssEkLtg7Bsgd6s6hohsAPJCWF.\&quot;,\&quot;utm_origin\&quot;:\&quot;https://www.daraz.lk/\&quot;,\&quot;isg\&quot;:\&quot;BPDwLxG0Y9rf0D_quNYwVsadwb5COdSDdYPT1-pB3Ms2pZFPkkkaE6CW-bXFNYxb\&quot;,\&quot;tfstk\&quot;:\&quot;fmFSODqtb3xWIGWPCeQqCdouPdGCbk1ZPegLSydyJbhJvHUt0W7oLTXLhoqo2kahr2nLvkiUUt5arzcn9GPC_1zufnwuluMJerQKR2mKVGjcTzcn9iSN_1zurlnWztVK9ZGxJ2tK9DdKDZgE-2hK2vKvHVix9DEKer3xJVv-v0hpMZgnDDhKJjXvGqAm0z_mz4semHHQymO_jSg8PL4ScMIQG-MmXBiX9BFjyru7UQA1Lcei4AoTDsRSOr3Q4mrO6IGxCR4ERu1WwbyYn7czgGtEFki-LSMX2L3sN0MTwxCNurDLhSGzwMvguri-CjyVngkENuwijYBcmkaj4kFSH3sqYRz4wxZO0IZndR4ERu1WwlIyyCo69zvBlAAIlc7flpvhEMOa7akzMOD-oqoNlZ9NPY3mlc7flpvneq0DuZ_XQa1..\&quot;}&quot;,&quot;requestParams&quot;:&quot;{\&quot;scm\&quot;:\&quot;1007.51657.380827.0\&quot;,\&quot;pvid\&quot;:\&quot;37d200a6-91e8-4998-b415-871c10f4582e\&quot;,\&quot;search\&quot;:\&quot;flashsale\&quot;,\&quot;spm\&quot;:\&quot;a2a0e.tm80335410.FlashSale.d_113580647\&quot;}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">defaultToken1_um_not_loaded@@https://www.daraz.lk/products/professional-nova-foldable-hair-dryer-compact-and-powerful-for-salon-quality-styling-i113580647-s1024812350.html?scm=1007.51657.380827.0&amp;pvid=37d200a6-91e8-4998-b415-871c10f4582e&amp;search=flashsale&amp;spm=a2a0e.tm80335410.FlashSale.d_113580647@@1730771423488</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">defaultUAFromHeader with @@https://www.daraz.lk/products/professional-nova-foldable-hair-dryer-compact-and-powerful-for-salon-quality-styling-i113580647-s1024812350.html?scm=1007.51657.380827.0&amp;pvid=37d200a6-91e8-4998-b415-871c10f4582e&amp;search=flashsale&amp;spm=a2a0e.tm80335410.FlashSale.d_113580647@@1730771423488</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getUser" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.lk/cart/api/count">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1730771424268&amp;sign=f6825a7052a608b1bce6b13c104db4a3&amp;api=mtop.lazada.guided.shopping.categories.categoriesLpCommon&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=LK&amp;appkey=24677475&amp;data=%7B%22regionId%22%3A%22LK%22%2C%22language%22%3A%22en%22%2C%22platform%22%3A%22pc%22%2C%22isbackup%22%3A%22true%22%2C%22backupParams%22%3A%22language%2CregionID%2Cplatform%2CpageNo%22%2C%22moduleName%22%3A%22categoriesLpMultiFloor%22%7D">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.guided.shopping.categories.categorieslpcommon/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;regionId&quot;:&quot;LK&quot;,&quot;language&quot;:&quot;en&quot;,&quot;platform&quot;:&quot;pc&quot;,&quot;isbackup&quot;:&quot;true&quot;,&quot;backupParams&quot;:&quot;language,regionID,platform,pageNo&quot;,&quot;moduleName&quot;:&quot;categoriesLpMultiFloor&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">f6825a7052a608b1bce6b13c104db4a3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771424268</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.guided.shopping.categories.categoriesLpCommon</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">defaultToken1_um_not_loaded@@https://www.daraz.lk/products/professional-nova-foldable-hair-dryer-compact-and-powerful-for-salon-quality-styling-i113580647-s1024812350.html?scm=1007.51657.380827.0&amp;pvid=37d200a6-91e8-4998-b415-871c10f4582e&amp;search=flashsale&amp;spm=a2a0e.tm80335410.FlashSale.d_113580647@@1730771423488</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">defaultUAFromHeader with @@https://www.daraz.lk/products/professional-nova-foldable-hair-dryer-compact-and-powerful-for-salon-quality-styling-i113580647-s1024812350.html?scm=1007.51657.380827.0&amp;pvid=37d200a6-91e8-4998-b415-871c10f4582e&amp;search=flashsale&amp;spm=a2a0e.tm80335410.FlashSale.d_113580647@@1730771423488</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.lk/api/recentOrders/">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!f2GFX5ZGfQ6f5b0wWPJkTF8G9UN0Eny5yX/AJ/o6zCaSOd+UGQs09zJS5Rb8DhCgOSYmAiAp5/ihcsxGPWCNSue3g1VtrIwLffxu1sfgdwtfPFfPbh/HXxVTz5DwWY+an+RI05WhQ/F9fNlktJJi6PPXwdH6eAX8XfqHACEFerKPfa6q5PG3Emtpp//m5SGYx/KfWSjQ5Hp280YxWP0axWqPfaFYAq5fff+kog+K4nyRjJ35CbgJSdKoa058Xr17mmE2oTh7X6P6V9+if4QDSk75efhX7WuFMhkfCuBS6SUpQK+6C0AmPOng0IbdGCLZNfy7e1IKpdENIryk+HaW3TWBGvdUsLDz2tIjOXiRYWL2FKVTssyBKh4RF/GuWJt9WhhRqlS9If/cFNfhhL81KS+kAqQ6pcB3kPn/xrzYmkB6grlJ5/Vax4hbU+lh/Is3NgUh2Gju96GWRT2vTOJWjsgYnE0XjuZ3TQGGwtuEFiv7maIsK2B7q/Hnnan+2saIRsVMrGdOn/mlGFKjkgHR0TIqudch8q9TERzXkRO2Tv36m/Q6/PezkVohIFvFOfK2ZKCeYVrylHbdO3U8FOmMjU17LAXOwQafxloGb9uM/g4tyKkLIjerdxnr8Hc7TD3wPkOYFb1ExL6GWmMScmy95+4RMAZOLhcqMzO/CV4WPtjhuoaR2M3Z7u7kjL2dXiqHm/RfIwUejjEyfX107haSuXgeBPaJju0JDp7Dbcq6RY69RgJFEinxoYYgPzRwVBEm5eVH5eeF6Ezit1zT5xiOnT9vTKWfaF8dIs+hyrWSYi3MEKZwa6rVot7FiQc1FrjgV/L5KpDhXU1nB3KwG8NI3GDuJ/==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lazada</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.detail.getrecommend.msite/1.0/?jsv=2.6.1&amp;appKey=24937400&amp;t=1730771428747&amp;sign=1a4c69b8a6bfecab1baca95e2cfc7758&amp;api=mtop.lazada.detail.getRecommend.mSite&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=10000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=LK&amp;traffic=drz-replatform&amp;appkey=24677475&amp;data=%7B%22shop_id%22%3A%2247797%22%2C%22search%22%3A%22flashsale%22%2C%22category_id%22%3A%221634%22%2C%22item_id%22%3A%22113580647%22%2C%22anonymous_id%22%3A%223b42b1d7-8bfe-4b3a-a44a-79cc93edc137%22%2C%22regional_key%22%3A%22080702010000%22%2C%22is_ab%22%3A%22false%22%2C%22sku%22%3A%22113580647_LK-1024812350%22%2C%22seller_id%22%3A%221000122000179%22%2C%22is_tbc%22%3A%220%22%2C%22_%22%3A%221730771425669%22%2C%22brand_id%22%3A%2239704%22%7D">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.detail.getrecommend.msite/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;shop_id&quot;:&quot;47797&quot;,&quot;search&quot;:&quot;flashsale&quot;,&quot;category_id&quot;:&quot;1634&quot;,&quot;item_id&quot;:&quot;113580647&quot;,&quot;anonymous_id&quot;:&quot;3b42b1d7-8bfe-4b3a-a44a-79cc93edc137&quot;,&quot;regional_key&quot;:&quot;080702010000&quot;,&quot;is_ab&quot;:&quot;false&quot;,&quot;sku&quot;:&quot;113580647_LK-1024812350&quot;,&quot;seller_id&quot;:&quot;1000122000179&quot;,&quot;is_tbc&quot;:&quot;0&quot;,&quot;_&quot;:&quot;1730771425669&quot;,&quot;brand_id&quot;:&quot;39704&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">1a4c69b8a6bfecab1baca95e2cfc7758</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">10000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771428747</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appkey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appkey</stringProp>
                  <stringProp name="Argument.value">24677475</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.detail.getRecommend.mSite</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">traffic</stringProp>
                  <stringProp name="Argument.value">drz-replatform</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gA9_X2IzDdtzJS9ChQgctZGhAfJtIUFd6BTU8RXkRFxFo_gfl0OUPAxmFDrOOqaBU=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#pEQr7WAUzzWzgzo23xrT4pN8s9x2iciOa/V4L3PLwZczUO8Von0dpUS1lxYDSXBfcVSLr3hqzzco410uX0+zzBIgIjnqlQzx2DD3VthqzFKL2MeClpOozPzYVXE/lboPzSSdpY9LMZ2aMXK7Y7oHPVgYAn4aP7ZBtzZgXU0sfQDguNdsbB91etkUCFGF6AmpB0q2XUIcPnRwVcsMFpnekHGIR0vCEKN1fAmUNrq5clFtNPp+3/HgLu99MCA+CD29zCsFW4hAVHn27CYWKAFma4aU/jbwQTc4OaLRqp/hfDyNvX0LLboTq6KlCsJnhQuZGXadf5yvO4E63pNKC0dUYQ5pZtZIbhPtkaiC91oKf4YT+276oNkx+MlzNm2crowD1ZXHuwdTeG6nvT92RLcgfyRJ66tyEiDzFTUrd1wsizxHX2WloUWwgUnFgV9j4G4gmI+CJvR+aKxviNA+BV0uHuQsuBwGHPtsoCzAdnsHN9Chwjn6eKH0oV/FNbclv1YiQkwz5IrEdpkbqdtxnxtzstXtF9cJnirQGVvN8EBRuJNyeT06TFx80OIuW/KUuaCJemcS22iDc2vDLBC8C/Bg9xE9/olzEqFgp1Hgais8yBT2YiXrdgY+DlhH0ZVNtAqBvzypBV0hXAqF+4zrW2EIcBFb1mVHxGo/0otzjJ3sw6O+cEc3x+iw+nUNFmii0LQQlEX8YGp1LnEwygzT085npQQIvld21tnlVkmtFzpSVQPWXYSFUE6dlVjSWdeyzTu+qh4Gv2HsZo7d0he1mWs7cgKq8LYs0G0RH6iNUwrXtUp8hdagk3urcgQ4LmBOy7oW1wprzYMba5og4EtBvzmmVc06++lKy6++MgwgntrfPhS19s/WUycBKXaacXRX9Mcfo3nEih4gaUcaaWEsUIm7D6KiffW9+J+zPYDwmLE2s81/FZk9J8wPq58wq31JrrxS5Z4Pzk57vtr5wmVXsNh+9xVLdqdTVOJE71O8Zz1snfOiGWSG/pMIdLbeCMhk//DezAebhYccg+xwaD6TZ04f0Am6IuH6TuIGWp6fGemgWg8KD9VEw3AObvut/E2NiqnLWBNYg7Uuvcx6qvDjYAbsn1YSo3HtI/E1ex9h/52U1RcltPG05W4FXm68rlQuuSjmuRY5kzPKLPKclDkwJTfzVzycp410+IZVibbX1cj3VVRFANkP7XFjU1huCE3FRUyS4bJxwODd98AbuRci3MBsOIL8GfvkCKpTh5wetWQc86KVHUVWLcOPSSAGaSXEXIo7at0KfgLGuPhrbz6/FZRpYNn724Uuc4smYuMBvG4WDN9Xd+2nkSGHfr5qTmE7p3GZlHaCHsPzperAKyFvE1EOg/ia2cz1zv3qSFH+b7XCX5axCcbTfoYVPpKf1pjITgIYQdMO78nV8qgUYpEc5QXL7acPqrXMNvqwEYEVMuWUMX+4eicrTV+Y+jem36vJOg1DBLyOhe76+Ut8wDZIklq+LRSURBsI6eaEfstav/8RT8isHFLXa/bVF+pTpmdiaH99pbjD9inYAX2euHx6qI+bb0hQpYlJj03bjGQ5zIIRWXSV1QPtPU4Mjv/ejn/pofNXtP2qTjoBmKDFBBctUN8ZXubuJ8Znb0tXJxxQK3LQTVs3XMgafYbofbo1oTXgOGGovMs83GTvqD//JD7PbnKVsMeIofv3+qXAhQNbfEMjzYQ7gZdT+Q==</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771437210&amp;sign=af33cc303bf090131683bc03cd746e82&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">af33cc303bf090131683bc03cd746e82</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771437210</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fvd7iIQYfQ6f5cGcWPJzTF8G9UNPvyx1O8XPJ/y7AT00az5SAT+UAy00YbF/9jhftSYmAiAp5/ihcsxGPWCNSuegrzVtrIwLffxu1sfgdwtfPFfPbh/HXxVTzWTiwUxK2Ko333ZeQ/upPffXYVs6eUQffSou2DyLe/XfXCqltUmPfaP23Pjlwwb3PIS6WSYn58PYdIGxWP4pzMfFdPsY5bnrfCd/2R5fff+kog+K4nyRjJ3gSYwFjaYv7wLVn1a3B3H5Ow2CyMAcSe5HCKzjMDH0Pe7GUMHLDmpeOmDPSSSvri3VN+r0Pc6JV100s3r63lMVCJeRGVuOUH3TtBQ/jKlSX6EduzSxmPb5zz8T+I4NV/DuaeyEWkOeRKubUai/Rokv7HmroTgN+Ak9CdL4C4dRVT5oIaOIAL+pY1eApDe7uv8mScwnLi33VuIc33TW8+HdYlzFwIgLBMoAqxirKFEcmZV5rb18SX40VwDPPe9WebHdTOgy72Oi3xJHMBLp59unUf9mGWwAN5+Z4OJL4K6wX0hMPQzEoVMa/fkHxt1yND8SAwRgMUHzn9aQly4Bb9IQByVaCpQQfh9y1ixIt9fX9fHpygjHdggBbK8ek9Sri3c7SybXm8gkgjuATU1nV/3dBHZFHTEB8obgmEwRGmmlhYL0IVloZZ6VcLxWHjl1ZmfKzrAisRIMJbLoh0sGpiTUIM55BrHVC/gmiX1Z9vRlRVkEyo2aASouYIpS/ZWzuRbtcNN9VlriDmIotxkQqySwgjFdlVA7ETnd1ww23GDviXO4hqqtDZk5gr0eciHnZWX0YAydWwdF4rd1pmrh0HogJzzWj2b+JthtgJKMPMIu4Ty3+zLwkAgdCoIA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lzd-sc-im-center</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771437508&amp;sign=25afeee2b2822c00768ff4639929fb2f&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221790266904_869%22%7D">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1790266904_869&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">25afeee2b2822c00768ff4639929fb2f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771437508</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771437508&amp;sign=5fffd4aa5447ff22894f39c897f2ca7d&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">5fffd4aa5447ff22894f39c897f2ca7d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771437508</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771439342&amp;sign=1c9f185f468029f95df67a4b98b0c732&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">1c9f185f468029f95df67a4b98b0c732</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771439342</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://helpcenter.daraz.lk/page/knowledge?spm=a2a0e.pdp_revamp.header.7.76ef49cbFjLOzj&amp;pageId=15&amp;category=1000001285" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">page/knowledge</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="spm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spm</stringProp>
                  <stringProp name="Argument.value">a2a0e.pdp_revamp.header.7.76ef49cbFjLOzj</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageId</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category</stringProp>
                  <stringProp name="Argument.value">1000001285</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">26703.0</stringProp>
              <stringProp name="ConstantTimer.delay">13351.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 26703 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.cco.intl.helpcenter.knowledge.category.list/1.0/?jsv=2.6.1&amp;appKey=30267743&amp;t=1730771465476&amp;sign=e448b8ee7671fea578ae56b2c6cf3293&amp;api=mtop.lazada.cco.intl.helpcenter.knowledge.category.list&amp;type=originaljson&amp;dataType=json&amp;v=1.0&amp;x-i18n-language=en_US" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.cco.intl.helpcenter.knowledge.category.list/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771465476</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">e448b8ee7671fea578ae56b2c6cf3293</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">30267743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.cco.intl.helpcenter.knowledge.category.list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;helpCenterInstanceId&quot;:&quot;10513010&quot;,&quot;sessionId&quot;:&quot;fd1334e06ba8423da6183c89f768b5a0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.cco.intl.helpcenter.knowledge.category.collect/1.0/?jsv=2.6.1&amp;appKey=30267743&amp;t=1730771465737&amp;sign=81554b0b2684a4f0cc48c3aa268001e7&amp;api=mtop.lazada.cco.intl.helpcenter.knowledge.category.collect&amp;type=originaljson&amp;dataType=json&amp;v=1.0&amp;x-i18n-language=en_US">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.cco.intl.helpcenter.knowledge.category.collect/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771465737</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">81554b0b2684a4f0cc48c3aa268001e7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">30267743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.cco.intl.helpcenter.knowledge.category.collect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;helpCenterInstanceId&quot;:&quot;10513010&quot;,&quot;sessionId&quot;:&quot;fd1334e06ba8423da6183c89f768b5a0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.cco.intl.helpcenter.knowledge.list/1.0/?jsv=2.6.1&amp;appKey=30267743&amp;t=1730771465738&amp;sign=883468a54bab72b6f2755e7245d6c8a1&amp;api=mtop.lazada.cco.intl.helpcenter.knowledge.list&amp;type=originaljson&amp;dataType=json&amp;v=1.0&amp;x-i18n-language=en_US">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.cco.intl.helpcenter.knowledge.list/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771465738</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">883468a54bab72b6f2755e7245d6c8a1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">30267743</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.cco.intl.helpcenter.knowledge.list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.6.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;helpCenterInstanceId&quot;:&quot;10513010&quot;,&quot;categoryId&quot;:&quot;1000001285&quot;,&quot;currPage&quot;:1,&quot;pageSize&quot;:10,&quot;sessionId&quot;:&quot;fd1334e06ba8423da6183c89f768b5a0&quot;,&quot;knowledgeId&quot;:&quot;&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en_US</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.daraz.lk/?m_station=page" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m_station" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">m_station</stringProp>
                  <stringProp name="Argument.value">page</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">24991.0</stringProp>
              <stringProp name="ConstantTimer.delay">12495.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 24991 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getUser">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.lk/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.lk/api/recentOrders/" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/?jsv=2.7.4&amp;appKey=24937400&amp;t=1730771475839&amp;sign=4d32ad20f78c373ff7052e0bd44f9bcc&amp;api=mtop.relationrecommend.LazadaRecommend.recommend&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en&amp;x-i18n-regionID=LK&amp;data=%7B%22appId%22%3A%2241701%22%2C%22params%22%3A%22%7B%5C%22appId%5C%22%3A%5C%2241701%5C%22%2C%5C%22isbackup%5C%22%3Atrue%2C%5C%22newTileEnable%5C%22%3Atrue%2C%5C%22language%5C%22%3A%5C%22en%5C%22%2C%5C%22region_id%5C%22%3A%5C%22LK%5C%22%2C%5C%22platform%5C%22%3A%5C%22pc%5C%22%2C%5C%22scene%5C%22%3A%5C%22homepage%5C%22%2C%5C%22appVersion%5C%22%3A%5C%227.48.0%5C%22%2C%5C%22anonymous_id%5C%22%3A%5C%225hCkHwXDQCoCAbahGLSN%2Bmwl%5C%22%2C%5C%22pageSize%5C%22%3A50%2C%5C%22userId%5C%22%3A0%2C%5C%22pageNo%5C%22%3A0%7D%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.relationrecommend.lazadarecommend.recommend/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;appId&quot;:&quot;41701&quot;,&quot;params&quot;:&quot;{\&quot;appId\&quot;:\&quot;41701\&quot;,\&quot;isbackup\&quot;:true,\&quot;newTileEnable\&quot;:true,\&quot;language\&quot;:\&quot;en\&quot;,\&quot;region_id\&quot;:\&quot;LK\&quot;,\&quot;platform\&quot;:\&quot;pc\&quot;,\&quot;scene\&quot;:\&quot;homepage\&quot;,\&quot;appVersion\&quot;:\&quot;7.48.0\&quot;,\&quot;anonymous_id\&quot;:\&quot;5hCkHwXDQCoCAbahGLSN+mwl\&quot;,\&quot;pageSize\&quot;:50,\&quot;userId\&quot;:0,\&quot;pageNo\&quot;:0}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">4d32ad20f78c373ff7052e0bd44f9bcc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771475839</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24937400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.relationrecommend.LazadaRecommend.recommend</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771497445&amp;sign=5c3a849343dfd44396243475556a3645&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_LK&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">5c3a849343dfd44396243475556a3645</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771497445</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771497833&amp;sign=a0124a5a7d994b2423cff682fc531f1d&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_LK&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221790266904_457%22%7D">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1790266904_457&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">a0124a5a7d994b2423cff682fc531f1d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771497833</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771497833&amp;sign=1499512a7d04d304ab2c8b0ea4fdd544&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_LK&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">1499512a7d04d304ab2c8b0ea4fdd544</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771497833</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771498049&amp;sign=8b01074a2579b43c01d845593faaf44a&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en_LK&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">8b01074a2579b43c01d845593faaf44a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771498049</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en_LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fHJUG0mvfQ6f58i/W/mQ4+8G9UNkkS5DzSSUf8hUAaszGnXUAT+e9asHQTQAwbR0WP/VD0aV7T5HHSVd3gGndfNIk2NR3AKffMd0jfS226XX4XWQVXgKMA2GypQ8Nqm9zDOBCipKVKfffNl0tJJiPfgmYVYoeAmfPfRHIN9iKfq4dIYqXNkGLYg63fjx5SGYxXG2WPYQdyCPdu4qCfGi2fxzXqqf08jauAVg7IUIZNlwsXKTOootq8AFINRMZkBqKpvzYChLGygXRdLgTAR5hhLrnuYakeRth5gszOWVlcBruevuJDLUgSOr49inQ5wGOO+klePS/ILQzFQ4VNCTPseg2a9sr4fRVLp2/CNmB+NSitpeO2UPBmCQESnkebDCDLFh47fZTF4BPG7t1uwQcnFcMVxNL5qdngEVTQxLh1hDfKTsNyZNTowdZ7r8MVOnJ4XjhJwU4jf0G/ZfKs+6O+yvn+QzNUuQoL83mwGgEKOGCujEfThe86100WGsPBDwNADrSKl8GjUvKeeNVuD5UcA1oaKni/FToSosgWHJ0vy/kHVsq67Avksdv307oP4Hjrku5W9o12CvaYou74f/ti87byIH28bDNlqoH0WkigE/DiugVGOmrRTKwWGzF048Wix3SYkAkr+DD+/m4OprfUCTwzne0nur9evXm/G8xMrLtHHN5ir6HH3nzuf2FBPzwmBi+sf7oIY/1pZmlCePIeCNHNAdVrBOKNQyLyhstYJISxbtJNlVVw3us7eo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lzd-sc-im-center</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.daraz.lk/shop/dimo-retail/?spm=a2a0e.tm80335410.bannerSliderDesktop.d_2" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">shop/dimo-retail/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="spm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">spm</stringProp>
                  <stringProp name="Argument.value">a2a0e.tm80335410.bannerSliderDesktop.d_2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">27550.0</stringProp>
              <stringProp name="ConstantTimer.delay">13775</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 27550 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getContextInfo" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getContextInfo</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getUser">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getUser</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cart.daraz.lk/cart/api/count" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">cart/api/count</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.daraz.lk/shop/renderApi/lzdPcPageData?pageId=50688525&amp;shopId=28327&amp;clientType=pc&amp;lang=en&amp;pageType=1" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">shop/renderApi/lzdPcPageData</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientType</stringProp>
                  <stringProp name="Argument.value">pc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageType</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="shopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">shopId</stringProp>
                  <stringProp name="Argument.value">28327</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageId</stringProp>
                  <stringProp name="Argument.value">50688525</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Traffic" elementType="Header">
                  <stringProp name="Header.name">Traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://my.daraz.lk/api/recentOrders/">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">api/recentOrders/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.daraz.lk/shop/site/api/shop/storeCategory/query?shopId=28327" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">shop/site/api/shop/storeCategory/query</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="shopId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">shopId</stringProp>
                  <stringProp name="Argument.value">28327</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Traffic" elementType="Header">
                  <stringProp name="Header.name">Traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.shop.atmosphere.list/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1730771504515&amp;sign=6951ff686d6419fe881b9471bfd409b2&amp;api=mtop.lazada.shop.atmosphere.list&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en-LK&amp;x-i18n-regionID=LK&amp;mockData=realtime-atmosphere.json&amp;data=%7B%22shopId%22%3A28327%2C%22pageTypeId%22%3A1%2C%22clientPlatform%22%3A%22pc%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.shop.atmosphere.list/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;shopId&quot;:28327,&quot;pageTypeId&quot;:1,&quot;clientPlatform&quot;:&quot;pc&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">6951ff686d6419fe881b9471bfd409b2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mockData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mockData</stringProp>
                  <stringProp name="Argument.value">realtime-atmosphere.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771504515</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en-LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.shop.atmosphere.list</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#FL+oTSIBzzP+mQo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcV1m56hqzzco41Vz8ubzzZDRIamqlQzx2DD3VthqzF3Z7X83l61zaIziVXE/3z//EHmijDapVrMn79/QCGKQA44d/Q72lQpGncnlAH7CFZW0N/1r894i3rxaTU5BUbQB+XMr8dXQ/jEDbm8ZTA96JlvrVM5KPNWa35+BwKN0qaxFU3mz8q7+XLIkbdtiXfnTiNu1aaxQKxCCPf1bo+YDa0t6OPDLJXMfOlq1aBfJmMG0PG6Cmm/W5toxBCyf+rroayi//vQozu/FHpOePx/IVTCtcDbZ8/laD8Pn2QRQaVv8fuxfL0JjiYLyJF0KFMICbZcK+5+EwecS9ILQrar6lKvEZwFd6rNFOVaNWN413c/5INlV4LFHjfiEbs/gr1zP/MeL0bTkvKPnwKCWWrNLCViaOA8I47HPBSvuekAccaYhyepfHFDSHZ6cGVW0hpQxYk6+6h8I/Nl7IxDmO9MznQolu88VouW0yeZ4s2SYaoqC7fmDsRClUDdFwv4H+vY8MqRhtTH+snI8+Bf8AqCW0BMqfj5+9ddgecgfXAUPtGjES+AY4Cq7sYsU237KZLn4LzJwKsGQri+vusSLdUwg05o+8U9rmDSs3H3C4vfDKtefVIb2kQB26IUbByTELg8V2U/69VwmHV/bY93FizvcjrmsNn5c10aX3MSDhmCQ7Zg2f8cBvOSEpH2ZRRuWfkDOlKU4EMPFnAIWZUeGdO2uoTMIyWDiwgHYpRuM4X4mW8dFo21cHejlAP9Bnm/v2ffa85IRN0C4yv1ogZ/fFPLWDoB1ISI1anqjT543VDdEpEAW4KwF4Rg15fC7QKv6JQGEdXAztClhjHh0bzHp6Q06</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en-LK</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fuB7pRl4fQ6f5cImWPQoTF8G9UNua5esqKuzJ/guAT00az5SAT+UAy00YbFizi67wSYmAiAp5/ihcsxGPWCNSug3gnVtrIwLffxu1sfgdwtfPFfPbh/HXxVTzWT5wZMzh0/5mDpKVKfffNl0tJJiPfgmYVYoeAmfPfRHIN9iKfq4dIYqXNkGLYg63fjx5SGYxXG2WPYQdyCPdu4qCfGiAPxYxx8z/ffJ2p8JuQ58Zs5L94/tKexEPipxSTBqgieI3451PQvZRfe9yznuoyyobiC9B67vl+LcQb5bR6CdJB2HTY90axhS/Zf5FSf68mkqHzqU+8uuqgroPByQqF+PdJziteRldnxQZMKNZjGfxV17zO6bAOk6CCSQb4zKzDkDaDcN99iqJqJSdNIaAUdZqrg1dz0PND4bF3wlsMh0MtdflmHNK641xr1Go8gmv0KzJGeTlCY6M1bMnzl957scI6xt7j49la8t8VCK60bwbu1DwcH97pE3Z3WX02IMrrimPrztDrclx1oMtYbZuPDmLumeBBGvx1Gt4rXWhzQYYQooE+LPu4v8pQTpqoy/UJodjpk720lRZM+DXFv3Dl50OYmN3c4t8boIuQaoB3ZfhvgH2ulQKKPqDWgQ15rF4MujS+UH+iKckVApow2lq1OFsQ0DdxZwpbyssDNF12OOlZ5vJwEde/Aroh9Zd5LxKy8I6V6ywfMuaPMtaUzBupFZIKuErRCbE33jYD7+EGzr7lTjsK0DJDKV</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lazada</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.shop.tpp.query.justforyou/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1730771504877&amp;sign=0ea0276af1eeacaf70082af624b23080&amp;api=mtop.lazada.shop.tpp.query.justForYou&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en-LK&amp;x-i18n-regionID=LK&amp;mockData=getData.json&amp;data=%7B%22sellerId%22%3A1017601%2C%22shopId%22%3A28327%2C%22lang%22%3A%22en%22%2C%22limit%22%3A12%2C%22offset%22%3A0%2C%22anonymousId%22%3A%22Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.shop.tpp.query.justforyou/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;sellerId&quot;:1017601,&quot;shopId&quot;:28327,&quot;lang&quot;:&quot;en&quot;,&quot;limit&quot;:12,&quot;offset&quot;:0,&quot;anonymousId&quot;:&quot;Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">0ea0276af1eeacaf70082af624b23080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mockData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mockData</stringProp>
                  <stringProp name="Argument.value">getData.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771504877</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en-LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.shop.tpp.query.justForYou</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#vk2oTSSlzzPcuQo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcVSm86hqzzco41Vz8ubzzjPqVaBqlQzx2DD3VthqzFLZ7X5tl3MzzPzYVXE/lbzMx6g+ONdOHaU+WFqNygx/ShxfTTAgDsV/DlSuX/tfaptxdKjGgFWHbK2MFc7EBdJjoxs5VFW2AVx67+HzJLn5wvUgquP4WrGHGKOlr5pXYYRYOdoXMsoLYs5b0mYzAUdiF/8cGEIaOnz1dttLWIz+EOHaRlUi2206VZPVthI9pPTJW0Rmveusp64dM+dpqAFQFFKawd6k/z+x56zaUVA2dkH45tMXHxnLgqOmL2uVxvDaK/LZQdF0j6anO0w6DXGoPLqxrX1ErE3BfjP02vzPOWluY/3dRzCMPGDIKaGK1gbMRgcHhq+Tyz99PnKD5gTWbxLgWf0joEYuG2tXGt3+P1yqKcaiCH2ks9LNPtECGfXj77NCw6f6jsPWuAPpTliO2eZz2CDVnzVz81qneQ81QcxGTDCvLk1dFFaSZUWjT6kg537r0S+iFCdWBdhJ9KOwcL18EGJNk7bWdTCMABk/FGCraXK7/VvOaeTTZmawD27Rpgd7FNemb/p1Cagk1POfIlE9AMaz/6Yx7z2QE7qHIQfbjqpnHRF0O6fj55WSp4/b+QbOcbW09rHVp/fHz5d+sQh6c7+W5Sh5rMS36yzwR3DCBq0K5WMnXso97Zyv65cGgTmbpIwDkca67/HTEa08BWARH8HdjbdkZzf4Fc8d0FVtxpBUza5rNMV+eA4YtX32/FMAyV+VKUrEOzHexZAUZofAReEvxxgotX4wPMlaiETuSUdIjIMHp4b5aveOkSU4u93JfQ/GuNwwWHKmUnMglOEoJpcKurCpyokev5je</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en-LK</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getCsrfToken">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#JxSosAnnzzPRuQo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcVOLM3hqzzco41Vz8ubzzB8FijlqlQzx2DD3VthqzFZZ7X5tlnM4zPziVP//lbzx2r+29i0I1wba7X5mgmUr3Axp+lmSa4DAbB5Ss9Iu5MU99usjDjuMMjSp/TP7TvjRzXaV/cB+A2JzBEXn+aaMlq23KXKcx36VpWZzjJ3sw6O+cEc3x+iw+nUseJrCqUHYXFu29NFUGvv5V2j2O27xdzDN4s66E5AW/p7YbHmZGq3rBeoXr3e3LVzLdRlpnI60ia54koweMG50HPQsOmmE1LZzaw8cd+/rBCO3t0HFpT5XFV3L4yoReF3Vva6XrAS5lsIK6Rg+rQ52f0+EHNuym8/ZGBHrKqIXD2NXeWR5Ipo8H72BsQNOJpd49cPUiDr+u15O5nHclaNBB9lIAMJGx9MgZHnZXSsAeHCp49Ox/c15gKbvfdRqxDydEsa1sSLzS8BK586lWnPNVmdxNZH9SkP4Pl9CNxQQuWz2bSl3+3//JNxKDIF/3o8j/THcu4QgPFVw7DCvqOMiww/JAo9Z/17rgCtadjHZ1HwqDYPS7sy6kHV19FtwOyQYpMYtyaHHHoYOUSeZScIU3zOkF+ccySk0CEtzLTiVq2/bT27j1jGRjomPfGFWnGc/J7MxaKc8AN7dVK1GsjslkzLKwFoazomikcmb4vHPBOV7bcol3tMu1X5w+Mss/OjKyOzdcZxSRX9TjjX6AKp7ZMqv0LOJ9KWTtmZqoZND1fY7UQVgYbCsnaA7bnrbsQNTOlyvNSkAzEfpDgwDweyrC2aTvsCSXnCam6kudi9pRrmKiJyWiw7Y0EW5XqVBROjFw9OJrlhzGHbjK0tkoYvBLCh3l4s478P1wFE17Uf/O6hZZGGowIh/dfK/IEeyy9VNMy27nfVPEMl1r7t0NhQe6DfoI4/foniAqeSimmKLVXQZ1Nb=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://member.daraz.lk/user/api/getCsrfToken" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">user/api/getCsrfToken</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#vW1opAn8zzPXizo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcIrm33hqzzco41Vz8ubzzqFFVaBqlQzx2DD3VthqzFAZ7X5tlnM4881iVXE/tFzx2Dc3FQI0cjmijDapVrJTJXFefcMEuNPOTLwxJcP80LEnWj0y85OL9EWZaPeg5HJ8t9SxIa3TRs5fITxJ3bu8a7Wt1bMGb1Mrl8Ie3rxaTU5BUbQB+XMr8dXQ/jEwTZthX79ixQI0GoB0q/c+iOIbIsrfzH1kEll4dA3kUJazOpny1MZJf3bFlfM0+zSAvqMqmUjc7rg13BCWvcX9mD8bsJ4byrD9B2Xf5TZpqbeUX9DlEdiD+MSkf3vAzUKq7ebZwWnq82hevTQWoriPXE+aG8fJL6nysOFGYLb2IGVA3vcHM42asiNEDYIkMfkSRmjr2F5EVcVruOBqaGpNvqLCPgScvW6rOtdIP5Cf9qMk0bdTBVnTYDtFAy1rHfCK87I8FSDWLshnmlt+tHY+sfcGra0WG26mqyq1nox5+zIDWuMQe6kk1r1HLxTM4L9gQORQhyQHcdplhP6XTfe4gtlmSFC/75I6tpzOwed8c/vTHoTn0dpR87oOW0FCcVG3qwSJ/RrdMsw1zW41CbFdav85T1UGIrWFyq+nnm5ls6KSOaMyepfjBU2B3It6l9ihg9e7yCc2vqV7AeCIY0VFbBdF+80eJdgA62O8HVRLn2gzVokKVpA31Uex9vIMCSbNoTX6bpwj1jwmXnIr4Be0h0/FfhzOrnixKH4BMmo/bK5kTaWrqZtGOEvgXtFv2rshynuDkAMos2uhpBBtZSImft+EmEl4v5leyH8uPkluPtIel9VeqNjfscfeAMeO+J+VKMzlvZPMpk01XWjhCru5H969vIo+JB1SAxCXZ1hvSlJxk94m7iSII0tJ6uoFwExjAaz3+wsRPoEla64Tkt/GTLTwk6/zrJTWvYz6LwHNzlYPASly</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.shop.tpp.query.justforyou/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1730771510819&amp;sign=01198732c5fa952a1a3e895dd698ea9f&amp;api=mtop.lazada.shop.tpp.query.justForYou&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en-LK&amp;x-i18n-regionID=LK&amp;mockData=getData.json&amp;data=%7B%22sellerId%22%3A1017601%2C%22shopId%22%3A28327%2C%22lang%22%3A%22en%22%2C%22limit%22%3A12%2C%22offset%22%3A1%2C%22anonymousId%22%3A%22Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.shop.tpp.query.justforyou/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;sellerId&quot;:1017601,&quot;shopId&quot;:28327,&quot;lang&quot;:&quot;en&quot;,&quot;limit&quot;:12,&quot;offset&quot;:1,&quot;anonymousId&quot;:&quot;Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">01198732c5fa952a1a3e895dd698ea9f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mockData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mockData</stringProp>
                  <stringProp name="Argument.value">getData.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771510819</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en-LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.shop.tpp.query.justForYou</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#Nt1D+nufzzPimQo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcI2Zc6hqzzco41Vz8ubzzRIyVHWqlQzx2DD3VthqzFtZ7X5tlnM4881Y7Yh/lbDa2Dc3V3gKzZXl7YLLMZ2aMX4XNRr2hh7N4xoEjVlLrSRwM2u0UnIwfGvjsI7p30Ee4yeG19RKGfkDElF+4P9r1x6FY9HjSz7T2wh3gWYO28rwA7SHOzuhGMREpYEFMNS9xgQVi6NzbCoKEBfnNIhbC4uEElv5c9Fczl7rtpyXoYqXvzjSQzZLu+zKT6623GH4jJvsx3REiVZzjJ3sw6O+cEc3x+iw+nUNFFLahCgQMbrQOyNogZn5BFpxXf7xxekBcOIdTyHDFCPntni6c/Kbe9FNMRJJ+P4SvPQ6MkcTFQ7S+A9KnXVrnyHG4Ipb1bad/9IX/52kmL7asydsEhIkqELbV3QwMsCEGC3O1c9+c1H/s0qH5Tf4F22ltHBt7dHr03+x1cdX3ZJ0l0F/6ZZHLaT5zF/WvOFVoPdU+9/1H7MCo8h2j+EAOPwG2t8zoFhygwT9lXC+3B84dawqPmNRsdgr8VBXV9f3Zlwjunzt7JCfzOLwOw7CedWOMSpDpvOxxJQGpaqyyCxwzvM94u+FpkANVpxp6Z21c68dFplkgLOHSHKj7fLOVh/q8KkMd88aDZax+hkpco2JVbHyJs9lfhfyHEydmnKSWGgUQx1JDdYpZsshvhXXqK6CQJz0Yfho31W/oTnQuQlldBOsLwSIoMqz5wrsGqXLBejVYPYISDaKXRe88QnXJhQsORf14Dily66b1evEGWEe6NUSpbfBG3YH+EJ/uxGzIw3SeJwnicdOcoD+LiYI92RQawuXZ0nG7fJmL6HKDx6IhTpwwKFsNbo5F/hL9KdBZm86SYzaTye1bqh8qR3aFFbwKQwJMG5s18C6Sljr5FbH8a4gXEAWORqlv3JT6GAol0y/E640VsHIb2RkFbJ1t1/DJ8EpWW8pgyAKn73tX1JEEiMC3Q/YivQByLOlMG2fjjO0b0FBUTLDB96LCcCRri9EWzQ=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en-LK</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.shop.tpp.query.justforyou/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1730771513594&amp;sign=ea83f2d214a5e34f5eee1e542edebd64&amp;api=mtop.lazada.shop.tpp.query.justForYou&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en-LK&amp;x-i18n-regionID=LK&amp;mockData=getData.json&amp;data=%7B%22sellerId%22%3A1017601%2C%22shopId%22%3A28327%2C%22lang%22%3A%22en%22%2C%22limit%22%3A12%2C%22offset%22%3A2%2C%22anonymousId%22%3A%22Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.shop.tpp.query.justforyou/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;sellerId&quot;:1017601,&quot;shopId&quot;:28327,&quot;lang&quot;:&quot;en&quot;,&quot;limit&quot;:12,&quot;offset&quot;:2,&quot;anonymousId&quot;:&quot;Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">ea83f2d214a5e34f5eee1e542edebd64</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mockData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mockData</stringProp>
                  <stringProp name="Argument.value">getData.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771513594</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en-LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.shop.tpp.query.justForYou</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#FKbDLcD1zzPVhQo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcIfHN6hqzzco41Vz8ubzzZoiIjnqlQzx2DD3VthqzFRZ7X5tlnM4881Y7E0PSQzx2oa3V3gqz4rxc5yUOSvZrI7Zb6bEaGMV5cgiQi2fpAfh9PGBb3rXcHpVTGOtYtsqk0VFFFNVO46t3/aRZGo0TpEA+BLva1EF5rzXC0HkYtj9RzYMqgQ75vJYscEdXt3usMOPlqP2ekxfOTQbeyEvWO9ZDPTAP5EkVetjHQR752+Fz4saEalsiUl+wqiwdQssN2zWtj9Ja7pTjksuypKKPAcE6605GAwxRWESx3rMioZzjJ3sw6O+cEc3x+iw+nUNs2yzVIrW1nh81kmnojb/oNSM/17xCs7BcOIdTvHlK9pEkpV9HlYn5cDshFyzXp2fht/opAZFppiNeS4rRIzwLRGE6cGP7YrUnT7i4n0WG1sCcHUUwYE6naMTV7xk6CjZLURrhUjMmwCYSMxNtF0paAiSUepMKWr8Ny5nu59n65QdlSDSFzvlJwyCElsi0+zsswH9uMRr20CBe3Rco2dqm70rlYprYfkB4JhTjz6pGuvI7cPUcoQOOO0tgYge5IJdU02VClQ8UKPGdpsKmZ4OPX9l26cAzvSuBuKFinyIR00+ISq9ylI1RkPwMtwS/mPJkTbpF7DUowMcKYtj6tI4foRDI/bTImWTYFu9uIpQdcWsNzBxupDrTfJl0eEYKdKl/EfqnP5Gc79FdR2WE5VmBWgFBX9ptpj6HA4yuz88NsiN/7b2EWRMwEuUme4QDzH9SjBtbpS9hQK1nf9D4k+oXXLrT4uIzPxYjeFESWHJpNQuWnsEi/6JDxJrevwOdw/kDp6/0DCqynMa3SrXF+BfdFHgs5Qyo6u07slkN/72FpQ3aX+tHs9V4WiHvn7sbIKoe4zeZysR12vQRq/0L7q74eUFDyM/JMRxtg2CNJhPFP2iUqAiJIN3MLuZuWG8B/Spw/l5o1LlbNJAz6TXOLYw/Kz7J6A4/dCuHNhGERLL96/SD6MWSbBTsafWZCVyeER7iXpVlRGY/0I5zHNaqMk9uF==</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en-LK</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.shop.tpp.query.justforyou/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1730771516002&amp;sign=6cb281ffa53c6a6044e5c34555ecbb42&amp;api=mtop.lazada.shop.tpp.query.justForYou&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en-LK&amp;x-i18n-regionID=LK&amp;mockData=getData.json&amp;data=%7B%22sellerId%22%3A1017601%2C%22shopId%22%3A28327%2C%22lang%22%3A%22en%22%2C%22limit%22%3A12%2C%22offset%22%3A3%2C%22anonymousId%22%3A%22Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.shop.tpp.query.justforyou/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;sellerId&quot;:1017601,&quot;shopId&quot;:28327,&quot;lang&quot;:&quot;en&quot;,&quot;limit&quot;:12,&quot;offset&quot;:3,&quot;anonymousId&quot;:&quot;Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">6cb281ffa53c6a6044e5c34555ecbb42</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mockData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mockData</stringProp>
                  <stringProp name="Argument.value">getData.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771516002</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en-LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.shop.tpp.query.justForYou</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#ohFDHU6fzzFnwzo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcIXHc6hqzzco41Vz8ubzzjQ5bYJqlQzx2DD3VthqzF5Z7X5tlnM4881Y7E0Pqdbx2Dc3L6gqzzrb6FrRiwaIPtrPHpcoUosXah485m1j0qweXMIcZANzMPrAL3SXLvlEzgDE9zHFi5dzDHfkh0EAJaX5CoAflhck1w/CB6LWdbpAYgxHofwAnz7W4jAgQNuGLAIv7CmBAmK1Y+BmBbeHsu88WU1rVKtUeZ15XsX/71N5IH+dlnIMnX8Op2ICHEeAG7o96DTolnHVPgUB7Wy68jrEdCCg+pk+Eb3kc1d6i+Vsx4P4iVZzjJ3sw6O+cEc3x+iw+nUs8DFu+8yhpsu2Yqm/o0+/EIb/b+7xwbDN4SCbAbodzt7bb3Uu1Jl3dzbMfxOkqZJXLmBJ62qFRuiycTWOmIadtkn6xRuxJH/MrWX3h2HOm6U/HebuarV/JulhCz3YufpGcc6ogVjA7QbmbSfZjYJyfq/j6LuD8U53i6fz3YPZ2j8x/MFgvqBAhLQv/v/q6M1aAV6113jFyzLjACKoKBmnHPGSid01qPUeRzvl73b4SVDUmHVPTjVzUAyfEFfK8/WpEtGggcTtg7QRlB4xGCwsrvmdXIVQ7AYNn0lLrS+14O/qj42bUFgh2/qpy+JQVmaeLTquTGIdkF4P8zu+cn0EitVC6xRFu7eEehYZtt+vE/vWdDMAiTJfdmcfp8EDleFryaxwp+cvtI5msmBJEtEh1jJbOZMAgm8IUJpzcFwey90V72iro8vEQypzTPxUJQkcSqQrCqb8Amx20A+SV446V7Ucuw5Lkm1M6q6c+1U1NbssSweWRLhT1j6U9Lkm7IUSKYgFjP7wc1WrTY5AxAeXtr18o6ZCHHw2JYOVQwRSJXoodv/BBsMFH55dSmaKZYqNFh4QqeuQNz8B7ush+OUFixVVB7RUFADXDkDP7SDaHMKUwuj0UxEZhfwH/fHdGKiq76Ck2g2jnlsh/WU55osSE3d4u1TP9iu6UpEMMtdRRYqN1J+Q9X2FMQIj3DGO7oBT0o9VuLNLysE9TNaFl/FqTaEwy++=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en-LK</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.shop.tpp.query.justforyou/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1730771519381&amp;sign=b6b5724444a7ddb55c58d782438e43a2&amp;api=mtop.lazada.shop.tpp.query.justForYou&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en-LK&amp;x-i18n-regionID=LK&amp;mockData=getData.json&amp;data=%7B%22sellerId%22%3A1017601%2C%22shopId%22%3A28327%2C%22lang%22%3A%22en%22%2C%22limit%22%3A12%2C%22offset%22%3A4%2C%22anonymousId%22%3A%22Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.shop.tpp.query.justforyou/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;sellerId&quot;:1017601,&quot;shopId&quot;:28327,&quot;lang&quot;:&quot;en&quot;,&quot;limit&quot;:12,&quot;offset&quot;:4,&quot;anonymousId&quot;:&quot;Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">b6b5724444a7ddb55c58d782438e43a2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mockData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mockData</stringProp>
                  <stringProp name="Argument.value">getData.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771519381</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en-LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.shop.tpp.query.justForYou</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#+ozDFTBczzPJYQo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcIMZ33hqzzco41Vz8ubzzR80iHEqlQzx2DD3VthqzFeZ7X5tlnM4881Y7E0PqdIV68c3V36ezzrb2XlgzWKPeaLLMZ2aMX4XLg+XM1oh/9mFdmwZq/pIi1G/NSevsCKdjm5pMyjdHqx3DWRfyIjM4rBRCuHBpFUTI9JqNhc7qUQ0lXSbhaMj9BpBWZZkt7F8XP9kVn4aX2tyl5/Oc8JecapyhiDwftL/kSeiTBtwv01TK5BjiymNd4PFaqZf17xveNkmAkqsSwWFfa7ualX+fDK2To081Xl82Be3o4yaA9jOC6mn47WvGFWfe1XMFc7EBdJjoxs5VFW2AVx67LczG0pGyjHxu2eBgWVB4Ca/Db0CTDfz7VGd1dXz5Fnj12otvKm6EZF23dzj4IxpOlEPZSk2u0Z8/yyiHDf+b67j6hMkl31YL0BSTuSyI69El+3g6+dH03DxaKyofiFacJPGxIJn37LD9+NuV4O5l0JSucHGtRrkdVOB0pvYRjfUMILXN4Z4Z+EdyD0qKhEbSvOtYRPx1M0h6fByDaOXtUskQOEAc9JSuh/KAgtpyVvn0Ly5s/DFINTQk4DGWP41NW7Io1l8w1QtjBTlR5J6+ohvMcOsTfwk6CW/cCvZ9obedsgV9lp4ayQ212BV6y5gks0t4b1Whv10TmAHCuclmbYkIK8No00xfu5zPYsvTsLp2OZbenrHvY1bum5HDV+fGbQaioKR07TMkAjcwxa5QmuG+DGlHppqOIhiN6gTsYB15vS8kH1RadtwCQllaOC1sAmomogKquNoismmLeV8BgIC/pmkOm7hfBXaFPWCpVSoJ3ZCRmco+4syW0Xh2ybu5WSHPXMimGGBUg5eTdvxh4zTfCdNvFuTplMywouryZmU/5MpgpDq3uCGAF7CkFnp/Kg6AIbGOr1n4w3IxQ9MoHejcpe0GcWq5O2tiFaNbwolHGaQf4xyWnCDnL5bAv/E3Empq3RQdBb9XV0jOHJ5Ax57t4nBcgK3xJXpgGByIJLWj3VhfS7/U9FcwggedbtosEvStd9DL5i9s+yAHmbxeAfs</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en-LK</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.shop.tpp.query.justforyou/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1730771522517&amp;sign=71c8bdfa2b168768959c9f3c44a229f3&amp;api=mtop.lazada.shop.tpp.query.justForYou&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en-LK&amp;x-i18n-regionID=LK&amp;mockData=getData.json&amp;data=%7B%22sellerId%22%3A1017601%2C%22shopId%22%3A28327%2C%22lang%22%3A%22en%22%2C%22limit%22%3A12%2C%22offset%22%3A5%2C%22anonymousId%22%3A%22Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.shop.tpp.query.justforyou/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;sellerId&quot;:1017601,&quot;shopId&quot;:28327,&quot;lang&quot;:&quot;en&quot;,&quot;limit&quot;:12,&quot;offset&quot;:5,&quot;anonymousId&quot;:&quot;Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">71c8bdfa2b168768959c9f3c44a229f3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mockData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mockData</stringProp>
                  <stringProp name="Argument.value">getData.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771522517</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en-LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.shop.tpp.query.justForYou</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#dMMDw3HnzzP7+Qo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcIbWZ6hqzzco41Vz8ubzzBQLba7qlQzx2DD3VthqzF6Z7X5tlnM4881Y7E0PqdIV6h3nZphqzFzY228+lphvzWZCiaLLMZ2aMX4XPltc9jbZ/7Yj1QTPPLpIs28mNSYrCrKkJGOgXw89sqdxr/RfyIjMAxUavuHBpFMPUiZRiMkA3NXb/376HILA7Z8NRNMhdZfV8ZPYUOtvhxRnpNNcvtIB/WtsDQOlf676S9F4s3VOSEmmBKgWpyN6FX17ptu9/fZr/pTFCtaAfCF2Hj/Krvdug0kiXaB5eN0W2taBT7+m1u4nqe303l+KH7clzH0QDg8bjJAXbzWP51XMFc7EBdJjoxs5VFW2AVx67LzgBQaHVpw1mcicoaPM3Vjit9OqA8EMwRgTgyOzL7vqzhgqS7xfoNaoUbzthJxpOlbn25JgeQ68cT8tew2juippkAM9MCAMWYGlim4ks7/upeQZxt21MvOb9q7kWRrInNl4+y8+mUp21MntReKAoeWt2dJ0mN03wtYf+dYWg86rDUTRAJIyz30GHO9V7qVOp92eLTYWMlnwU02EkI1ptCRG8lwUyFxKc8XdhtEX0DkoRy0S3U+iWdgqzv1wtEGtOHf9549bQsqUypT+e2thxkG6M87Ga3QW4oQ2cEOP4drLkooTJxvsVPCHCKot9Grmwpd88quqWgEYDSNhQZKeuD972r/4mX4upNo/loQ52s+Ts/KY6WonF8LYmi3GfvC3sDR7UjvYx9MLNn0yWuYe3aUbTzEUr4mKcurB3kPcSQjHh0QzRE0tAJ3lbnxIcdvv8ugfaGrNJPtL7tHaX97qz3ZfYu6iIp2emvp4PEYxDvGYcbUuhBmpNOq1xqAjAlyFM+soc5D8oztFbzynoab7PSeofm5ZExQ7qPkwYkTJ7RYinVdf/bkZmSkD5gDmhT55tAYD73/o+FN5flFYDQBjq6nVgUXMEW3PUKELDtbmebl5vw3IybBjlqWWnjZ33DrVarXNkiwKLEp6XDjthMMOGLSLqteLYxVqeRs2KlaaSc1XaNvACBk7RZhAEQmw3HY9C125XLGVifXnZc0F0aSmYHfEnilYA3I0y3vTRA+=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en-LK</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.lazada.shop.tpp.query.justforyou/1.0/?jsv=2.7.2&amp;appKey=24936599&amp;t=1730771525455&amp;sign=90cb8d4f3ae89946b72207cdf73996cf&amp;api=mtop.lazada.shop.tpp.query.justForYou&amp;v=1.0&amp;type=originaljson&amp;isSec=1&amp;AntiCreep=true&amp;timeout=20000&amp;dataType=json&amp;sessionOption=AutoLoginOnly&amp;x-i18n-language=en-LK&amp;x-i18n-regionID=LK&amp;mockData=getData.json&amp;data=%7B%22sellerId%22%3A1017601%2C%22shopId%22%3A28327%2C%22lang%22%3A%22en%22%2C%22limit%22%3A12%2C%22offset%22%3A6%2C%22anonymousId%22%3A%22Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.lazada.shop.tpp.query.justforyou/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;sellerId&quot;:1017601,&quot;shopId&quot;:28327,&quot;lang&quot;:&quot;en&quot;,&quot;limit&quot;:12,&quot;offset&quot;:6,&quot;anonymousId&quot;:&quot;Y3kFVNqwi4DoavOBECELxaGY5PJ1vaIG&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">90cb8d4f3ae89946b72207cdf73996cf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timeout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">timeout</stringProp>
                  <stringProp name="Argument.value">20000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mockData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mockData</stringProp>
                  <stringProp name="Argument.value">getData.json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771525455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sessionOption" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionOption</stringProp>
                  <stringProp name="Argument.value">AutoLoginOnly</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en-LK</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AntiCreep" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AntiCreep</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24936599</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isSec" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isSec</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.lazada.shop.tpp.query.justForYou</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-umidtoken" elementType="Header">
                  <stringProp name="Header.name">x-umidtoken</stringProp>
                  <stringProp name="Header.value">T2gAYo9wr-IPtigOJXYi6RWcj2EA4NPHwxlMJ8e_TKJEBt0_KRbzwvCiAeF9FEb59ps=</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="Header">
                  <stringProp name="Header.name">x-i18n-regionID</stringProp>
                  <stringProp name="Header.value">LK</stringProp>
                </elementProp>
                <elementProp name="x-ua" elementType="Header">
                  <stringProp name="Header.name">x-ua</stringProp>
                  <stringProp name="Header.value">140#3XfDA6OazzFxazo23zN+4pN8s9x2icJ4dqmmwrtaya5k6y6MEyZW4mEy8zBEWqGLcIsma6hqzzco41Vz8ubzzqiV9jWqlbrz2DD3V3gqoVcp2A5//vnmoV98ceXeBj3vska+u8b9zFzi2Duvlp1xzKux3dqcOSvZrI7Zb6imtMjyaxdkJ97Vo5L20UHQV2NYWOZuFhYg0V6iBH051frZ6yPwL7ZfnjatQ9NeoZmjdd0nWGfUGIxTUJMa2ywpnHG0hWsAdP4Ldm7jiU/sdSqUY1jtULp63UQmDVtWUJUPyzkQUKIW+spsh6KUwhexVINee8y6ZrZkl5xtU9AZtzb99T1PuAEkBYdI9JnwYR+iU9J8sQJiQTthfUXluQ1asBuzaBzmgHxa6AVsx3kviVZzjJ3sw6O+cEc3x+iw+nUsr3270Vp7cJkB0IjjAOPHgZw1/7Ab92UVIFZs9bes6vo+q0rONSMDpcDsYLzXc+1E4tNcfaUSXZZPDGLja69va15rI43Q6KWqGO/hlWt5GsG+lFEezrviQbJerXjud0Hx9piIV8wYoQH6r8HZJrfjdcq7WMSOE9Z+Na0oOqUWdc2lJW7IpyiM8/B7jGqOPt28bxcsS6eRB4EkRSAVleJGeAq2JwzX5JHr+JVjPnNupAFDmkjMZMSEnQ5pWRGj9Fcdyqg2owIwgotO5hllruyP/2s7+6ya6m3S7Msz3lvStxO+bQ9nia5EdqF1NlWokMyxgg6RotuhtBsTm4nfeKgKfvOxSQ4qzMdYs39kuWiaHYtwBes1sOlUwp3vzbjVScnd/+peAUARbXAoRdBpIKzfM8zFwggPl5pKaiR4Rf9X8+qEpfLMhesBs6nUr+RcDKaoxa7udB0z6FmRLwXVUH6sb32digSMU2gp2hL7Yd3reCIge2v1utjTVB4bCjK7rqlEHRHP79Hu9JXS7clRTfj7FaCDMQ9jSwkMHcjLwLYpUJ1IaygaSfC/qANQsGLLWAT5GKcBWCdfEK3Wg1wdxsEg3L0vkc/2KWqHBTZK/QpTzQHWRSyX8GObogX/gK57XKS/2VBZcwflZY5xRcSqGmAwgt17l0s704YwhQO25D0J4XkorHp2neWz3ocadtKIIJn5Ss8r90dM66PFWQ+3m42O5jc1Vl+=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="entrance" elementType="Header">
                  <stringProp name="Header.name">entrance</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="Header">
                  <stringProp name="Header.name">x-i18n-language</stringProp>
                  <stringProp name="Header.value">en-LK</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771525820&amp;sign=c90a41e337a1c6bb6ff24887ff904419&amp;api=mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimaccountservice.getloginuserinfo/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">c90a41e337a1c6bb6ff24887ff904419</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771525820</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImAccountService.getLoginUserInfo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://umlazada.alibaba.com/service/um.json" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">service/um.json</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">107!fHQMq0e6fQ6f5MmpWPJ3TF8G9UNP6JspA6duJ/yCGnxUp15RATiSGdLUf+FTyUoIpfYmAiAp5/ihcsxGPWCNSu/lt2VtrIwLffxu1sfgdwtfPFfPbh/HXxVTzW4KuQPZW28f8r4TXgFktJdi6PPffdth+JQ8aYff2C9TeNGdfXfWw/GqxWzW3ULGmf4Yx/KXdIGn5HpwfW8fRS4QxgjXJV6WNRWEacff5Twgb4DPGEsSeB56Bv3o3SIMFcsfBgTnCGDm+9ISOcsS4aBE4vid2oXXEa34wSeCxx0t9etIhgWBS4Vm1BOjFyhApG4Bmk2RwJm1uIOC4HDXsx5cxBcWA/V62GWmYjpa4epTJZ2AsNOxBohanqbNyVOw547/s+BFSotPaAGw541amD9Aa5p4NqECSp/bGJq+t87qy4slupA4kHtJm4Y2UGW4HV97m6Wow2i1idLSeOv/m2+9jwuLPGtJ27xr+rUCzAQff0Z0pl2xdeBTLTUjXJ/Srneu+zAScM6/4S46zt07hatwey21Ey1z4P3EHEC+9lBdeWXn3Ja8Vd8bexNfmANgepruZq4h+rj7txxpnHiVIE8A1GkzPB2a5QIfqFX79F+IACT+IuSMTiuI3VDyD/Z2KbHSiGxyVJKSJLMS7J2nuXiPBoUTwDVjCVU/UsS/JB9f1GGhEUjeSaOL4IhnokDFF71SllyxX/A05c/PQzXeHEK8l1+EOIPHIL+YFilctruVevYW7IrDfFo5vXn4a9FkWmiO</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xa</stringProp>
                  <stringProp name="Argument.value">lzd-sc-im-center</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="xt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">xt</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771526066&amp;sign=35ebfe74fba84a0a296b961c173ed17f&amp;api=mtop.im.use.web.buyer.mtopImTokenService.getToken&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accsAppKey%22%3A%22H5_24814220%22%2C%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22windowId%22%3A%221790266904_812%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimtokenservice.gettoken/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accsAppKey&quot;:&quot;H5_24814220&quot;,&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;windowId&quot;:&quot;1790266904_812&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">35ebfe74fba84a0a296b961c173ed17f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771526066</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImTokenService.getToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771526066&amp;sign=28c7e42c117e34169365482db0143819&amp;api=mtop.im.use.web.buyer.messagebox.querySessionList&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%2C%22accountType%22%3A1%2C%22nodeId%22%3A1%2C%22startTime%22%3A-1%2C%22fetchCount%22%3A20%2C%22pageNum%22%3A1%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.messagebox.querysessionlist/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;,&quot;accountType&quot;:1,&quot;nodeId&quot;:1,&quot;startTime&quot;:-1,&quot;fetchCount&quot;:20,&quot;pageNum&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">28c7e42c117e34169365482db0143819</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771526066</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.messagebox.querySessionList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acs-m.daraz.lk/h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/?jsv=2.7.2&amp;appKey=24814220&amp;t=1730771526303&amp;sign=b7c5dd59b3e3d30839ef115f575d67b3&amp;api=mtop.im.use.web.buyer.mtopImEmojiService.getAll&amp;v=1.0&amp;H5Request=true&amp;syncCookieMode=true&amp;x-i18n-language=en&amp;x-i18n-regionID=lk&amp;dataType=json&amp;method=GET&amp;type=originaljson&amp;data=%7B%22accessKey%22%3A%22lazada-pc-h5%22%2C%22accessToken%22%3A%22lazada-test-secret%22%7D" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">h5/mtop.im.use.web.buyer.mtopimemojiservice.getall/1.0/</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">GET</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">data</stringProp>
                  <stringProp name="Argument.value">{&quot;accessKey&quot;:&quot;lazada-pc-h5&quot;,&quot;accessToken&quot;:&quot;lazada-test-secret&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-regionID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-regionID</stringProp>
                  <stringProp name="Argument.value">lk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="H5Request" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">H5Request</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dataType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataType</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sign</stringProp>
                  <stringProp name="Argument.value">b7c5dd59b3e3d30839ef115f575d67b3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">2.7.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">originaljson</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1730771526303</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="x-i18n-language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-i18n-language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">appKey</stringProp>
                  <stringProp name="Argument.value">24814220</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="syncCookieMode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">syncCookieMode</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="api" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">api</stringProp>
                  <stringProp name="Argument.value">mtop.im.use.web.buyer.mtopImEmojiService.getAll</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="traffic" elementType="Header">
                  <stringProp name="Header.name">traffic</stringProp>
                  <stringProp name="Header.value">drz-replatform</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
